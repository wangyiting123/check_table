{"version":3,"sources":["components/form/index.tsx","components/tableList/index.tsx","components/tabList/index.tsx","components/dialog/index.tsx","components/input/index.tsx","components/select/index.tsx","store/temperatureTab/types.ts","store/temperatureTab/reducer.ts","store/reducers.ts","store/index.ts","request/index.ts","store/temperatureTab/mockData.ts","store/temperatureTab/action.ts","projects/temperatureRegister/subject.ts","projects/temperatureRegister/constants.ts","utils/dom.tsx","projects/temperatureRegister/headerList.tsx","components/tableList/tableRow.tsx","components/tableList/tableCell.tsx","projects/temperatureRegister/bodyTable.tsx","projects/temperatureRegister/index.tsx","App.js","serviceWorker.js","index.js"],"names":["FormLabel","props","config","input","data","index","key","select","map","item","name","eval","params","TableList","useState","className","pagination","scroll","y","TabPane","Tabs","TabList","list","onChange","onTabClick","e","selectItem","forceRender","tab","tabName","Dialog","state","visible","handleShow","setState","handleOk","confirm","handleCancel","cancel","nextProps","show","this","id","onCancel","onOk","title","content","Component","showDialog","dialogContent","ReactDOM","render","document","getElementById","InputLabel","Item","style","margin","dataIndex","Option","Select","SelectLabel","options","width","value","HEADER_TABS","ADD_TAB","GET_TAB_LIST","ADD_TABLE","ADD_TABLE_HEADER","DELETE_TAB","RENAME_TAB","DELETE_TABLE","DELETE_TABLE_HEADER","INIT_TAB_LIST","INIT_TABLE","INIT_TABLE_HEAD","CHANGE_TABLE","CHANGE_TABLE_HEAD","UPDATE_TABLE_CELL","GET_NEW_TABLE_LIST","initState","tabList","type","activeTable","activeTableId","String","tableList","activeColumns","columns","uiShowTable","count","Number","reducers","types","action","cloneDeep","splice","length","payload","push","newName","range","concat","newTable","table","slice","min","max","col","forEach","element","el","reducer","combineReducers","temperatureTab","store","createStore","applyMiddleware","thunk","instance","axios","create","baseURL","interceptors","request","use","error","Promise","reject","response","colunms","isKey","editable","newTableList","temperature","date","classes","students","telephone","i","initData","addTable","tableItem","addTableHeader","headerItem","deleteTab","dispatch","subjectWindow","Subject","CONSTANTS","getMenuList","onClick","click","bind","HeaderList","connect","addTab","tabItem","initTabList","renameTab","newTabData","dropDownList","selectTabData","parentParams","defaultValue","createNewTab","target","createNewTabBySelect","tabListChanged","newTab","onNext","showAddDialog","stopPropagation","showSelectList","overlay","trigger","CaretDownOutlined","getTabList","tabData","EditableContext","React","createContext","EditableRow","Form","useForm","form","component","Provider","children","EditableCell","record","handleSave","restProps","editing","setEditing","useContext","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","onPressEnter","onBlur","paddingRight","BodyTable","initTable","get","then","res","status","changeTable","updateTableCell","cellData","getNewTableList","scrollRange","height","body","clientHeight","currentPageCount","Math","ceil","maxCount","cols","tableBody","getUiShowRange","computedPrevAndLastPosition","prevNode","querySelector","lastNode","prevHeight","lastHeight","setAttribute","handleColumns","KeyOutlined","onCell","handleScroll","realHeight","scrollTop","scrollHeight","floor","onScroll","subscribe","components","dataSource","TemperatureRegister","App","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.375c792d.chunk.js","sourcesContent":["import React, { useState, Component } from 'react';\nimport {\n  Modal, Button, Form, Input,\n} from 'antd';\nimport { InputLabel, SelectLabel } from '../index';\n\ninterface IBasicComponent {\n  name: string,\n  params: any\n}\n\ninterface props {\n  config: IBasicComponent[]\n}\nconst FormLabel = (props: props) => {\n  const { config } = props;\n  const input = (data: any, index: number) => (\n    <InputLabel\n      {...data}\n      key={index}\n    />\n  );\n  const select = (data: any, index: number) => (\n    <SelectLabel\n      {...data}\n      key={index}\n    />\n  );\n  return (\n    <div>\n      {\n        config && config.map((item, index) => item.name && eval(item.name)(item.params, index))\n      }\n    </div>\n  );\n};\n\nexport default FormLabel;\n","import React, { useState } from 'react';\nimport { Table } from 'antd';\n\ninterface ITableListProps {\n  columns: [],\n  dataSource: [],\n  components: any\n}\n\nconst TableList = (props: ITableListProps) => {\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return (\n    <div>\n      <Table\n        className=\" self-table\"\n        pagination={false}\n        scroll={{ y: '500px' }}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TableList;\n","import React, { useState } from 'react';\nimport { Tabs, Dropdown } from 'antd';\n\nconst { TabPane } = Tabs;\n\nexport interface ITabItem {\n  id: string;\n  name: string;\n  type: string;\n  tabName: any;\n}\n\ninterface ITabListProps {\n  list: Array<ITabItem>,\n  onChange?: any\n}\n\nconst TabList = (props: ITabListProps) => {\n  const { list, onChange } = props;\n  const tabistChanged = (data: any, e: any) => {\n    let selectItem = null;\n    list.map((item, index) => {\n      if (index == data) {\n        selectItem = item;\n      }\n    });\n    onChange && onChange(selectItem);\n  };\n\n  return (\n    <Tabs onTabClick={tabistChanged}>\n      {\n        list && list.map((item, index) => (\n          <TabPane\n            forceRender\n            key={index}\n            tab={item.tabName}\n          />\n        ))\n      }\n    </Tabs>\n  );\n};\n\nexport default TabList;\n","import React, { useState, Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport ReactDOM from 'react-dom';\n\ninterface props {\n  content: any,\n  title: string,\n  show?: boolean,\n  confirm: Function,\n  cancel?: Function\n}\nclass Dialog extends Component<props, any> {\n  state = { visible: true };\n\n  componentWillReceiveProps(nextProps: props) {\n    if (nextProps.show) {\n      this.handleShow();\n    }\n  }\n\n  handleShow = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      visible: false,\n    });\n    this.props.confirm();\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n    this.props.cancel && this.props.cancel();\n  };\n\n  render() {\n    return (\n      <div id=\"dialog-class\">\n        <Modal\n          onCancel={this.handleCancel}\n          onOk={this.handleOk}\n          title={this.props.title}\n          visible={this.state.visible}\n        >\n          {this.props.content}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst showDialog = (dialogContent: props) => {\n  dialogContent.show = true;\n  ReactDOM.render(\n    <Dialog {...dialogContent} />,\n    document.getElementById('app-dialog'),\n  );\n};\n\nexport default showDialog;\n","import React, { useState } from 'react';\nimport { Input, Form } from 'antd';\n\ninterface IInputLabelProps {\n  title: '',\n  dataIndex: ''\n  onChange: any\n}\n\nexport const InputLabel = (props: IInputLabelProps) => {\n  const { title, onChange } = props;\n  if (title) {\n    return (\n      <div>\n        {\n          title && <span>{title}</span>\n        }\n        <Input {...props} />\n      </div>\n    );\n  }\n  return (\n    <Form.Item\n      style={{ margin: 0 }}\n      name={props.dataIndex || ''}\n    >\n      <Input {...props} />\n    </Form.Item>\n  );\n};\n\nexport default InputLabel;\n","import React, { useState } from 'react';\nimport { Input, Form, Select } from 'antd';\n\nconst { Option } = Select;\n\ninterface ISelectLableProps {\n  title: string,\n  dataIndex?: string,\n  options: any[],\n  onChange: any\n}\n\nconst SelectLabel = (props: ISelectLableProps) => {\n  const { title, onChange, options } = props;\n  const select = () => (\n    <Select\n      onChange={onChange}\n      style={{ width: 120 }}\n    >\n      {\n        options && options.map((item: any, index: number) => (\n          <Option\n            key={index}\n            value={item.title}\n          >\n            {item.title}\n          </Option>\n        ))\n      }\n    </Select>\n  );\n  if (title) {\n    return (\n      <div>\n        {\n          title && <span>{title}</span>\n        }\n        {select()}\n      </div>\n    );\n  }\n  return (\n    <Form.Item\n      name={props.dataIndex || ''}\n      style={{ margin: 0 }}\n    >\n      {select()}\n    </Form.Item>\n  );\n};\n\nexport default SelectLabel;\n","const HEADER_TABS = {\n  ADD_TAB: 'ADD_TAB',\n  GET_TAB_LIST: 'GET_TAB_LIST',\n  ADD_TABLE: 'ADD_TABLE',\n  ADD_TABLE_HEADER: 'ADD_TABLE_HEADER',\n  DELETE_TAB: 'DELETE_TAB',\n  RENAME_TAB: 'RENAME_TAB',\n  DELETE_TABLE: 'DELETE_TABLE',\n  DELETE_TABLE_HEADER: 'DELETE_TABLE_HEADER',\n  INIT_TAB_LIST: 'INIT_TAB_LIST',\n  INIT_TABLE: 'INIT_TABLE',\n  INIT_TABLE_HEAD: 'INIT_TABLE_HEAD',\n  CHANGE_TABLE: 'CHANGE_TABLE',\n  CHANGE_TABLE_HEAD: 'CHANGE_TABLE_HEAD',\n  UPDATE_TABLE_CELL: 'UPDATE_TABLE_CELL',\n  GET_NEW_TABLE_LIST: 'GET_NEW_TABLE_LIST',\n\n};\nexport default HEADER_TABS;\n","/* eslint-disable import/no-unresolved */\nimport { cloneDeep } from 'lodash';\n// eslint-disable-next-line import/extensions\nimport types from './types';\n\nconst initState = {\n  tabList: <any>[{ id: 'add', name: '+建表', type: 'add' }],\n  activeTable: <any>[],\n  activeTableId: String,\n  tableList: <any>[],\n  activeColumns: <any>[],\n  columns: <any>[],\n  uiShowTable: <any>[],\n  count: Number,\n};\n\nconst reducers: any = {};\nreducers[types.ADD_TAB] = (state = initState, action: { type: any, payload: any }) => {\n  const tabList = cloneDeep(state.tabList);\n  tabList.splice(state.tabList.length - 1, 0, action.payload);\n  return {\n    ...state,\n    tabList,\n  };\n};\n\nreducers[types.ADD_TABLE] = (state = initState, action: { type: any, payload: any }) => {\n  const tableList = cloneDeep(state.tableList);\n  tableList.push(action.payload);\n  return {\n    ...state,\n    tableList,\n  };\n};\n\nreducers[types.ADD_TABLE_HEADER] = (state = initState, action: { type: any, payload: any }) => {\n  const columns = cloneDeep(state.columns);\n  columns.push(action.payload);\n  return {\n    ...state,\n    columns,\n  };\n};\n\nreducers[types.DELETE_TAB] = (state = initState, action: { type: any, payload: any }) => {\n  const tabList = cloneDeep(state.tabList);\n  tabList.splice(action.payload.index, 1);\n  return {\n    ...state,\n    tabList,\n  };\n};\n\nreducers[types.RENAME_TAB] = (state = initState, action: { type: any, payload: any }) => {\n  const tabList = cloneDeep(state.tabList);\n  tabList[action.payload.index].name = action.payload.newName;\n  return {\n    ...state,\n    tabList,\n  };\n};\n\nreducers[types.DELETE_TABLE] = (state = initState, action: { type: any, payload: any }) => {\n  const tableList = cloneDeep(state.tableList);\n  tableList.splice(action.payload.index, 1);\n  return {\n    ...state,\n    tableList,\n  };\n};\n\nreducers[types.DELETE_TABLE_HEADER] = (state = initState, action: { type: any, payload: any }) => {\n  const columns = cloneDeep(state.columns);\n  columns.splice(action.payload.index, 1);\n  return {\n    ...state,\n    columns,\n  };\n};\n\nreducers[types.INIT_TABLE] = (state = initState, action: { type: any, payload: any }) => {\n  const tableList = cloneDeep(state.tableList);\n  const { range } = action.payload;\n  const list = tableList.concat(action.payload.list);\n  const newTable = list[0].table.slice(range.min, range.max + 1);\n  return {\n    ...state,\n    tableList: list,\n    activeTable: list[0].table,\n    uiShowTable: newTable,\n    activeTableId: list[0].id,\n    count: list[0].table.length,\n  };\n};\n\nreducers[types.INIT_TABLE_HEAD] = (state = initState, action: { type: any, payload: any }) => {\n  const columns = cloneDeep(state.columns);\n  const list = columns.concat(action.payload);\n  return {\n    ...state,\n    columns: list,\n    activeColumns: list[0].col,\n  };\n};\n\nreducers[types.INIT_TAB_LIST] = (state = initState, action: { type: any, payload: any }) => {\n  const tabList = cloneDeep(state.tabList);\n  const list = action.payload.concat(tabList);\n  return {\n    ...state,\n    tabList: list,\n  };\n};\n\nreducers[types.CHANGE_TABLE] = (state = initState, action: { type: any, payload: any }) => {\n  const tableList = cloneDeep(state.tableList);\n  let activeTable = null;\n  tableList.forEach((element: any) => {\n    if (element.id === action.payload.id) {\n      activeTable = element.table;\n    }\n  });\n  return {\n    ...state,\n    activeTable,\n    activeTableId: action.payload.id,\n  };\n};\n\nreducers[types.CHANGE_TABLE_HEAD] = (state = initState, action: { type: any, payload: any }) => {\n  const columns = cloneDeep(state.columns);\n  let activeColumns = null;\n  columns.forEach((element: any) => {\n    if (element.id === action.payload.id) {\n      activeColumns = element.col;\n    }\n  });\n  return {\n    ...state,\n    activeColumns,\n  };\n};\n\nreducers[types.UPDATE_TABLE_CELL] = (state = initState, action: { type: any, payload: any }) => {\n  const tableList = cloneDeep(state.tableList);\n  let activeTable = cloneDeep(state.activeTable);\n  let uiShowTable = cloneDeep(state.uiShowTable);\n  uiShowTable = uiShowTable.map((el: any) => {\n    if (el.key === action.payload.key) {\n      return { ...el, ...action.payload };\n    }\n    return el;\n  });\n  activeTable = activeTable.map((el: any) => {\n    if (el.key === action.payload.key) {\n      return { ...el, ...action.payload };\n    }\n    return el;\n  });\n  tableList.forEach((element: any) => {\n    if (element.id === state.activeTableId) {\n      // eslint-disable-next-line no-param-reassign\n      element.table = activeTable;\n    }\n  });\n  return {\n    ...state,\n    tableList,\n    activeTable,\n    uiShowTable,\n  };\n};\n\nreducers[types.GET_NEW_TABLE_LIST] = (state = initState, action: { type: any, payload: any }) => {\n  const activeTable = cloneDeep(state.activeTable);\n  const { max, min } = action.payload;\n  const newTable = activeTable.slice(min, max + 1);\n  return {\n    ...state,\n    uiShowTable: newTable,\n  };\n};\n\nconst reducer = (state = initState, action: { type: string; payload: any }) => {\n  if (reducers[action.type]) {\n    return reducers[action.type](state, action);\n  }\n  return state;\n};\n\nexport default reducer;\n","\nimport { combineReducers } from 'redux';\nimport temperatureTab from './temperatureTab/reducer';\n\nexport default combineReducers({\n  temperatureTab,\n});\n","/* eslint-disable import/no-unresolved */\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n// eslint-disable-next-line import/extensions\nimport reducers from './reducers';\n\nconst store = createStore(\n  reducers,\n  {},\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:5000/'\n});\n\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  });\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n\n  export default instance;\n  ","export const initData = () => {\n  const number = 20000;\n  const list = [];\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < number; i++) {\n    list.push({\n      key: `${i}`,\n      temperature: '36',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '张三',\n      telephone: `${i}`,\n    });\n  }\n  return list;\n};\nexport const tableList = [{\n  id: 1,\n  table: [\n    {\n      key: '1',\n      temperature: '36',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '张三',\n      telephone: '1212121212',\n    },\n    {\n      key: '2',\n      temperature: '36.4',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '莉丝',\n      telephone: '1212121212',\n    },\n    {\n      key: '3',\n      temperature: '36.3',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '小张',\n      telephone: '1212121212',\n    },\n    {\n      key: '4',\n      temperature: '36.5',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '张小',\n      telephone: '1212121212',\n    },\n  ],\n}];\nexport const colunms = [{\n  id: 1,\n  col: [\n    {\n      title: '体温',\n      dataIndex: 'temperature',\n      isKey: true,\n      type: 'input',\n      editable: true,\n    },\n    {\n      title: '日期',\n      dataIndex: 'date',\n      isKey: false,\n      type: 'input',\n    },\n    {\n      title: '班级',\n      dataIndex: 'classes',\n      isKey: false,\n      type: 'select',\n      editable: true,\n      options: [{ id: 1, title: '小一班' }, { id: 2, title: '小二班' }],\n    },\n    {\n      title: '学生',\n      dataIndex: 'students',\n      isKey: false,\n      type: 'input',\n    },\n    {\n      title: '家长电话',\n      dataIndex: 'telephone',\n      isKey: false,\n      type: 'input',\n    },\n  ],\n}];\n\nexport const tabList = [{ id: 1, name: '测温情况', type: 'self' }];\n","import { cloneDeep } from 'lodash';\nimport types from './types';\nimport request from '../../request';\nimport {\n  tabList, tableList, colunms, initData,\n} from './mockData';\n\nconst newTableList = cloneDeep(tableList);\nnewTableList[0].table = initData();\n\nexport const addTab = (tabItem: any) => (dispatch: any) => {\n  dispatch({\n    type: types.ADD_TAB,\n    payload: tabItem,\n  });\n  dispatch(addTable({\n    id: tabItem.id,\n    table: [{\n      key: '1',\n      temperature: '36',\n      date: '2020-06-18',\n      classes: '小一班',\n      students: '张三',\n      telephone: '1212121212',\n    }],\n  }));\n  dispatch(addTableHeader({\n    id: tabItem.id,\n    col: [{\n      title: tabItem.key,\n      dataIndex: 'temperature',\n      isKey: true,\n      type: 'input',\n      editable: true,\n    }],\n  }));\n};\n\nexport const initTabList = () => ({\n  type: types.INIT_TAB_LIST,\n  payload: tabList,\n});\n\nexport const addTable = (tableItem: any) => ({\n  type: types.ADD_TABLE,\n  payload: tableItem,\n});\n\nexport const addTableHeader = (headerItem: any) => ({\n  type: types.ADD_TABLE_HEADER,\n  payload: headerItem,\n});\n\nexport const deleteTable = (tableItem: any) => ({\n  type: types.DELETE_TABLE,\n  payload: tableItem,\n});\n\nexport const deleteTableHeader = (headerItem: any) => ({\n  type: types.DELETE_TABLE_HEADER,\n  payload: headerItem,\n});\n\nexport const initTable = (range: any) => (dispatch: any) => {\n  request.get('list').then((res) => {\n    if (res.status === 200) {\n      newTableList[0].table = res.data;\n      dispatch({\n        type: types.INIT_TABLE,\n        payload: { list: newTableList, range },\n      });\n    }\n  })\n\n\n  dispatch({\n    type: types.INIT_TABLE_HEAD,\n    payload: colunms,\n  });\n};\n\nexport const deleteTab = (data: any) => (dispatch: any) => {\n  dispatch({\n    type: types.DELETE_TAB,\n    payload: data,\n  });\n  dispatch(deleteTable(data));\n  dispatch(deleteTableHeader(data));\n};\n\nexport const renameTab = (data: any) => ({\n  type: types.RENAME_TAB,\n  payload: data,\n});\n\nexport const changeTable = (data: any) => (dispatch: any) => {\n  dispatch({\n    type: types.CHANGE_TABLE,\n    payload: data,\n  });\n  dispatch({\n    type: types.CHANGE_TABLE_HEAD,\n    payload: data,\n  });\n};\n\nexport const updateTableCell = (data: any) => ({\n  type: types.UPDATE_TABLE_CELL,\n  payload: data,\n});\n\nexport const getNewTableList = (range: {}) => ({\n  type: types.GET_NEW_TABLE_LIST,\n  payload: range,\n});\n","import { Subject } from 'rx';\nexport const subjectWindow = new Subject();\n","export const CONSTANTS= {\n    TAB_DROP_DOWN :[{id: 1, name: '删除表'}, {id: 2, name: '重命名'}],\n    TAB_ADD_TYPE : 'add',\n    TAB_SELF_TYPE: 'self'\n}","import {\n  Menu, Table, Input, Button, Popconfirm, Form,\n} from 'antd';\nimport React, {\n  useContext, useState, useEffect, useRef,\n} from 'react';\n\nexport const getMenuList = (list: any[]) => (\n  <Menu>\n    {\n      list.map((item, index) => (\n        <Menu.Item key={index}>\n          <a onClick={item.click.bind(null, item)}>{item.name}</a>\n        </Menu.Item>\n      ))\n    }\n  </Menu>\n);\n","import React, { Component } from 'react';\nimport { Dropdown } from 'antd';\nimport { connect } from 'react-redux';\nimport {\n  CaretDownOutlined,\n} from '@ant-design/icons';\nimport {\n  TabList, showDialog, FormLabel,\n} from '../../components';\nimport {\n  initTabList, addTab, deleteTab, renameTab,\n} from '../../store/temperatureTab/action';\nimport { subjectWindow } from './subject';\nimport { CONSTANTS } from './constants';\nimport { getMenuList } from '../../utils/dom';\n\ninterface ITabItem {\n  id: string;\n  name: string;\n  type: string;\n}\n\ninterface Props {\n  tabList: Array<ITabItem>,\n  addTab: ()=>any,\n  deleteTab: ()=>any,\n}\n\nconst mapStateToProps = (state: any) => ({\n  tabList: state.temperatureTab.tabList,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  addTab: (tab: ITabItem) => dispatch(addTab(tab)),\n  initTabList: () => dispatch(initTabList()),\n  deleteTab: (tab: ITabItem) => dispatch(deleteTab(tab)),\n  renameTab: (tab: ITabItem) => dispatch(renameTab(tab)),\n});\n\n@(connect(mapStateToProps, mapDispatchToProps) as any)\nexport default class HeaderList extends Component<any, any> {\n  newTabData: any;\n\n  dropDownList: any;\n\n  selectTabData: any;\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  deleteTab= (data: any) => {\n    showDialog({\n      content: '确定删除此表格吗？',\n      title: '删除',\n      confirm: () => {\n        this.props.deleteTab({ index: data.parentParams.index });\n      },\n    });\n  }\n\n  renameTab = (data: any) => {\n    const config = [{\n      name: 'input',\n      params: {\n        title: '表名称',\n        defaultValue: data.name,\n        onChange: this.createNewTab,\n      },\n    }];\n    showDialog({\n      content: <FormLabel config={config} />,\n      title: '建表',\n      confirm: () => {\n        if (this.newTabData !== data.name) {\n          this.props.renameTab({ index: data.parentParams.index, newName: this.newTabData });\n        }\n      },\n      cancel: () => {\n        this.newTabData = '';\n      },\n    });\n  }\n\n  componentWillMount() {\n    this.props.initTabList();\n  }\n\n  createNewTab = (e: any) => {\n    this.newTabData = e.target.value;\n  }\n\n  createNewTabBySelect = (value: string) => {\n    this.selectTabData = value;\n  }\n\n  tabListChanged = (data: any) => {\n    if (data.type === 'add') {\n      const config = [{\n        name: 'input',\n        params: {\n          title: '表名称',\n          onChange: this.createNewTab,\n        },\n      },\n      {\n        name: 'select',\n        params: {\n          title: '主子段',\n          options: [{ id: 1, title: '班级' }, { id: 2, title: '姓名' }],\n          onChange: this.createNewTabBySelect,\n        },\n      }];\n      showDialog({\n        content: <FormLabel config={config} />,\n        title: '建表',\n        confirm: () => {\n          const newTab = {\n            id: this.props.tabList.length + 1, name: this.newTabData, type: CONSTANTS.TAB_SELF_TYPE, key: this.selectTabData,\n          };\n          this.props.addTab(newTab);\n        },\n        cancel: () => {\n          this.newTabData = '';\n        },\n      });\n    } else {\n      subjectWindow.onNext(data);\n    }\n  }\n\n  showAddDialog = (item: ITabItem, e: any) => {\n    this.tabListChanged(item);\n    e.stopPropagation();\n  }\n\n  showSelectList = (item: ITabItem, e: any) => {\n    e.stopPropagation();\n  }\n\n  tabName =(data: ITabItem, index: string) => {\n    this.dropDownList = [{\n      id: 1, name: '删除表', click: this.deleteTab, parentParams: { ...data, index },\n    },\n    {\n      id: 2, name: '重命名', click: this.renameTab, parentParams: { ...data, index },\n    }];\n    if (data.type === CONSTANTS.TAB_ADD_TYPE) {\n      return <div onClick={this.showAddDialog.bind(null, data)}>{data.name}</div>;\n    }\n    return (\n      <div>\n        <span>{data.name}</span>\n        <Dropdown overlay={getMenuList(this.dropDownList)} trigger={['click']}>\n          <a className=\"ant-dropdown-link\">\n            <CaretDownOutlined />\n          </a>\n        </Dropdown>\n      </div>\n    );\n  }\n\n  getTabList = () => this.props.tabList.map((item: any, index: string) => {\n    item.tabName = this.tabName(item, index);\n    return item;\n  })\n\n  render() {\n    const tabData = this.getTabList();\n    return <TabList list={tabData} onChange={this.tabListChanged} />;\n  }\n}\n","import React, {\n  useContext, useState, useEffect, useRef,\n} from 'react';\nimport {\n  Table, Input, Button, Popconfirm, Form,\n} from 'antd';\n\nexport const EditableContext = React.createContext('');\n\nexport const EditableRow = ({ ...props }) => {\n  const [form] : any = Form.useForm();\n  return (\n    <Form\n      component={false}\n      form={form}\n    >\n      <EditableContext.Provider value={form}>\n        <tr {...props}>{props.children}</tr>\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n","import React, {\n  useContext, useState, useEffect, useRef,\n} from 'react';\nimport FormLabel from '../form';\nimport { EditableContext } from './tableRow';\n\nexport const EditableCell = (props: any) => {\n  const {\n    col = {},\n    record,\n    handleSave,\n    children,\n    ...restProps\n  } = props;\n  const [editing, setEditing] = useState(false);\n  const form: any = useContext(EditableContext);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [col.dataIndex]: record[col.dataIndex],\n    });\n  };\n\n  const save = async (e: any) => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n  const config = [{\n    name: col.type,\n    params: {\n      onPressEnter: save,\n      onBlur: save,\n      onChange: save,\n      dataIndex: col.dataIndex,\n      options: col.options,\n    },\n  }];\n  if (col.type === 'input') {\n    delete config[0].params.onChange;\n  }\n  if (col.editable) {\n    childNode = editing ? (<FormLabel config={config} />)\n      : (\n        <div\n          className=\"editable-cell-value-wrap\"\n          onClick={toggleEdit}\n          style={{\n\t\t  paddingRight: 24,\n          }}\n        >\n          {children}\n        </div>\n      );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n","import React, {\n  Component,\n} from 'react';\nimport {\n  Dropdown,\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {\n  CaretDownOutlined,\n  KeyOutlined,\n} from '@ant-design/icons';\nimport { TableList } from '../../components';\nimport {\n  initTable, addTable, changeTable, updateTableCell, getNewTableList,\n} from '../../store/temperatureTab/action';\nimport { subjectWindow } from './subject';\nimport { ITabItem } from '../../components/tabList';\nimport { getMenuList } from '../../utils/dom';\nimport { EditableRow } from '../../components/tableList/tableRow';\nimport { EditableCell } from '../../components/tableList/tableCell';\n\nconst tableCellHeight = 55;\n\nconst mapStateToProps = (state: any) => ({\n  uiShowTable: state.temperatureTab.uiShowTable,\n  activeColumns: state.temperatureTab.activeColumns,\n  count: state.temperatureTab.count,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  addTable: (tab: ITabItem) => dispatch(addTable(tab)),\n  initTable: (range: {}) => dispatch(initTable(range)),\n  changeTable: (tab: ITabItem) => dispatch(changeTable(tab)),\n  updateTableCell: (cellData: any) => dispatch(updateTableCell(cellData)),\n  getNewTableList: (range: {}) => dispatch(getNewTableList(range)),\n});\n\n@(connect(mapStateToProps, mapDispatchToProps) as any)\nexport default class BodyTable extends Component<any, any> {\n  scrollRange = { min: 0, max: 0 }; // 滚动条对应的表格位置\n\n  height = document.body.clientHeight;\n\n  currentPageCount = Math.ceil(this.height / tableCellHeight);\n\n  maxCount = this.currentPageCount * 4;\n\n  cols: any;\n\n  tableBody: any;\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.initTable(this.scrollRange);\n\n    subjectWindow.subscribe((data) => {\n      // eslint-disable-next-line react/destructuring-assignment\n      this.props.changeTable(data);\n    });\n  }\n\n  componentDidUpdate() {\n    this.computedPrevAndLastPosition();\n  }\n\n  getUiShowRange = () => {\n    this.scrollRange.min = 0;\n    this.scrollRange.max = this.maxCount;\n  }\n\n  computedPrevAndLastPosition = () => {\n    const prevNode = document.querySelector('.tbody-prev');\n    const lastNode = document.querySelector('.tbody-last');\n    const prevHeight = this.scrollRange.min * tableCellHeight;\n    // eslint-disable-next-line react/destructuring-assignment\n    const lastHeight = (this.props.count - this.scrollRange.max) * tableCellHeight;\n    // eslint-disable-next-line no-unused-expressions\n    prevNode?.setAttribute('style', `height: ${prevHeight}px`);\n    // eslint-disable-next-line no-unused-expressions\n    lastNode?.setAttribute('style', `height: ${lastHeight}px`);\n  }\n\n  updateTableCell = (data: any) => {\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.updateTableCell(data);\n  }\n\n  handleColumns = (data: any) => {\n    const dropDownList = [{ id: 1, name: '新增字段', click: () => {} },\n      { id: 1, name: '删除字段', click: () => {} },\n      { id: 1, name: '设为主字段', click: () => {} },\n      { id: 1, name: '选中', click: () => {} }];\n    return data.map((element : any) => {\n      const col = {\n        ...element,\n        title: <div>\n          {\n            element.isKey && <KeyOutlined />\n          }\n          <span>{element.title}</span>\n          <Dropdown overlay={getMenuList(dropDownList)} trigger={['click']}>\n            <a className=\"ant-dropdown-link\">\n              <CaretDownOutlined />\n            </a>\n          </Dropdown>\n        </div>,\n      };\n      if (!element.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: (record: any) => ({\n          record,\n          col,\n          handleSave: this.updateTableCell,\n        }),\n      };\n    });\n  }\n\n  handleScroll = (e: any) => {\n    const { scrollTop } = e.target;\n    const realHeight = (scrollTop * this.props.count * tableCellHeight) / (e.target.scrollHeight);\n    const index = Math.floor(realHeight / tableCellHeight);\n    if (this.maxCount - index <= this.currentPageCount * 2 || index <= this.currentPageCount * 2) {\n      this.scrollRange.min = index;\n      this.scrollRange.max = index + this.maxCount;\n      this.props.getNewTableList(this.scrollRange);\n    }\n  }\n\n  body = (table: any) => {\n    const columns = this.cols;\n    return (\n      <div className=\"ant-table-header self-table-body\" onScroll={this.handleScroll}>\n        <div className=\"tbody-prev\" />\n        <table>\n          <tbody className=\"ant-table-tbody\">\n            {\n              table && table.map((item: any, index: number) => (\n                <EditableRow {...item}>\n                  {\n                    columns.map((col: any) => (\n                      <EditableCell className=\"ant-table-cell\" record={item} col={col} handleSave={this.updateTableCell}>\n                        {item[col.dataIndex]}\n                        {' '}\n                      </EditableCell>\n                    ))\n                  }\n                  <EditableCell className=\"ant-table-cell ant-table-cell-scrollbar\"> </EditableCell>\n                </EditableRow>\n              ))\n            }\n          </tbody>\n        </table>\n        <div className=\"tbody-last\" />\n      </div>\n    );\n  };\n\n  render() {\n    const { activeColumns, uiShowTable } = this.props;\n    this.cols = this.handleColumns(activeColumns);\n    const components = {\n      body: this.body,\n    };\n    return <TableList columns={this.cols} dataSource={uiShowTable} components={components} />;\n  }\n}\n","import React, { useState } from 'react';\nimport HeaderList from './headerList';\nimport BodyTable from './bodyTable';\nimport './index.css';\n\nclass TemperatureRegister extends React.Component {\n  render() {\n    return (\n      <div>\n        <HeaderList />\n        <BodyTable />\n      </div>\n    );\n  }\n}\n\nexport default TemperatureRegister;\n","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport TemperatureRegister from './projects/temperatureRegister';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TemperatureRegister />\n      <div id=\"app-dialog\" />\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}